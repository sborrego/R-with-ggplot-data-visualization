aes(x = Species,
y = Petal.Width))
# Basic boxplot adding a `geom_boxplot()` layer
# Important note: the x value must be factored or grouped to have individual
# boxplots returned
plot_2 +
geom_boxplot()
# Colorful boxplot adding more layers and aesthetic mappings to the data
plot_2 +
geom_boxplot(aes(color = Species),
outlier.colour = NA,
position = "dodge") +
geom_jitter(aes(color = Species,
x = Species),
position = position_jitter(width = .05),
alpha = 0.5) +
labs(x = "Species",
y = "Petal Width",
title = "Petal Width of Iris Species") +
theme_bw()
# Install Tidyverse
# install.packages("tidyverse")
# Load the umbrella package Tidyverse
library(tidyverse)
# Reloading data to ensure nothing has been manipulated
data(iris)
# Filter rows and save as an object
small <- filter(iris,
Petal.Length < 5)
# Select columns and save as another object
small_x <- select(x,
Species, Petal.Length, Petal.Width)
# Filter rows and save as an object
small <- filter(iris,
Petal.Length < 5)
# Select columns and save as another object
small_x <- select(small,
Species, Petal.Length, Petal.Width)
small_x
# Combine the two operations in one piece of code using pipes
iris %>%
filter(Petal.Length < 5) %>%
select(Species, Petal.Length, Petal.Width)
heights(1, 2, NA, 5)
heights <- c(1, 2, NA, 5)
sum(is.na(heights))
which(is.na(heights))
# Returns vector of boolean values indicating if the value NA or not
is.na(heights)
# Sum of all the NAs present
sum(is.na(heights))
# Identifies the index containing the NA value
which(is.na(heights))
heights[is.na(heights)]
heights[!is.na(heights)]
na.omit(heights)
mean(na.omit(heights))
complete.cases(heights)
heights[complete.cases(heights)]
heights <- c(1, 2, 3, NA, 5, NA)
mean(heights)
max(heights)
mean(heights, na.rm = TRUE)
max(heights, na.rm = TRUE)
# Returns vector of boolean values indicating if the value NA or not
is.na(heights)
# Sum of all the NAs present
sum(is.na(heights))
# Identifies the index containing the NA value
which(is.na(heights))
heights[is.na(heights)]
heights[!is.na(heights)]
na.omit(heights)
mean(na.omit(heights))
complete.cases(heights)
heights[complete.cases(heights)]
na.omit(heights)
heights <- c(1, 2, 3, NA, 5, NA)
mean(heights)
max(heights)
mean(heights, na.rm = TRUE)
max(heights, na.rm = TRUE)
clear()
clear
plot_3 <- ggplot(data = iris,
aes(x = Petal.Length,
y = Petal.Width))
# Basic boxplot adding a `geom_boxplot()` layer
# Important note: the x value must be factored or grouped to have individual
# boxplots returned
plot_3 +
geom_point()
# Colorful boxplot adding more layers and aesthetic mappings to the data
plot_3 +
geom_point(size = 5) +
scale_color_brewer(palette = "PuOr")
plot_3 <- ggplot(data = iris,
aes(x = Petal.Length,
y = Petal.Width))
# Basic boxplot adding a `geom_boxplot()` layer
# Important note: the x value must be factored or grouped to have individual
# boxplots returned
plot_3 +
geom_point()
# Colorful boxplot adding more layers and aesthetic mappings to the data
install.packages("RColorBrewer")
library(RColorBrewer)
plot_3 +
geom_point(size = 5) +
scale_color_brewer(palette = "PuOr")
plot_3 <- ggplot(data = iris,
aes(x = Petal.Length,
y = Petal.Width))
# Basic boxplot adding a `geom_boxplot()` layer
# Important note: the x value must be factored or grouped to have individual
# boxplots returned
plot_3 +
geom_point()
# Colorful boxplot adding more layers and aesthetic mappings to the data
install.packages("RColorBrewer")
library(RColorBrewer)
plot_3 +
geom_point(size = 5) +
scale_color_brewer(palette = "PuOr")
plot_3 <- ggplot(data = iris,
aes(x = Petal.Length,
y = Petal.Width))
# Basic boxplot adding a `geom_boxplot()` layer
# Important note: the x value must be factored or grouped to have individual
# boxplots returned
plot_3 +
geom_point()
# Colorful boxplot adding more layers and aesthetic mappings to the data
# install.packages("RColorBrewer")
library(RColorBrewer)
plot_3 +
geom_point(size = 5) +
scale_color_brewer(palette = "PuOr")
plot_3 <- ggplot(data = iris,
aes(x = Petal.Length,
y = Petal.Width,
color = Species,
fill = Species))
# Basic boxplot adding a `geom_boxplot()` layer
# Important note: the x value must be factored or grouped to have individual
# boxplots returned
plot_3 +
geom_point()
# Colorful boxplot adding more layers and aesthetic mappings to the data
# install.packages("RColorBrewer")
library(RColorBrewer)
plot_3 +
geom_point(size = 5) +
scale_color_brewer(palette = "PuOr")
# Creating the base plot. Here we have indicated the data set and its mappings.
# We have also added which column should be used for color and fill mappings.
plot_3 <- ggplot(data = iris,
aes(x = Petal.Length,
y = Petal.Width,
color = Species,
fill = Species))
# Basic boxplot adding a `geom_boxplot()` layer
# Important note: the x value must be factored or grouped to have individual
# boxplots returned
plot_3 +
geom_point()
# RColorBrewer Examples
# install.packages("RColorBrewer")
library(RColorBrewer)
plot_3 +
geom_point(size = 5) +
scale_color_brewer(palette = "PuOr")
plot_3 +
geom_point(size = 5) +
scale_color_brewer(palette = "blues")
# Creating the base plot. Here we have indicated the data set and its mappings.
# We have also added which column should be used for color and fill mappings.
plot_3 <- ggplot(data = iris,
aes(x = Petal.Length,
y = Petal.Width,
color = Species,
fill = Species))
# Basic boxplot adding a `geom_boxplot()` layer
# Important note: the x value must be factored or grouped to have individual
# boxplots returned
plot_3 +
geom_point()
# RColorBrewer Examples
# install.packages("RColorBrewer")
library(RColorBrewer)
plot_3 +
geom_point(size = 5) +
scale_color_brewer(palette = "PuOr")
plot_3 +
geom_point(size = 5) +
scale_color_brewer(palette = "blue")
# Creating the base plot. Here we have indicated the data set and its mappings.
# We have also added which column should be used for color and fill mappings.
plot_3 <- ggplot(data = iris,
aes(x = Petal.Length,
y = Petal.Width,
color = Species,
fill = Species))
# Basic boxplot adding a `geom_boxplot()` layer
# Important note: the x value must be factored or grouped to have individual
# boxplots returned
plot_3 +
geom_point()
# RColorBrewer Examples
# install.packages("RColorBrewer")
library(RColorBrewer)
plot_3 +
geom_point(size = 5) +
scale_color_brewer(palette = "PuOr")
plot_3 +
geom_point(size = 5) +
scale_color_brewer(palette = "Blues")
# Creating the base plot. Here we have indicated the data set and its
# mappings.We have also added which column should be used for color
# and fill mappings.
plot_3 <- ggplot(data = iris,
aes(x = Petal.Length,
y = Petal.Width,
color = Species,
fill = Species))
# Basic boxplot adding a `geom_boxplot()` layer
plot_3 +
geom_point()
# RColorBrewer Examples
# install.packages("RColorBrewer")
library(RColorBrewer)
plot_3 +
geom_point(size = 3) +
scale_color_brewer(palette = "PuOr")
plot_3 +
geom_point(size = 3) +
scale_color_brewer(palette = "Blues")
# Creating the base plot. Here we have indicated the data set and its
# mappings.We have also added which column should be used for color
# and fill mappings.
plot_3 <- ggplot(data = iris,
aes(x = Petal.Length,
y = Petal.Width,
color = Species,
fill = Species))
# Basic boxplot adding a `geom_boxplot()` layer
plot_3 +
geom_point()
# RColorBrewer Examples
# install.packages("RColorBrewer")
library(RColorBrewer)
# RColorBrewer Example 1
plot_3 +
geom_point(size = 2) +
scale_color_brewer(palette = "PuOr")
# RColorBrewer Example 2
plot_3 +
geom_point(size = 2) +
scale_color_brewer(palette = "Blues")
# viridisLite Example 1
plot_3 +
geom_point(size = 2) +
scale_colour_viridis_d()
# Creating the base plot. Here we have indicated the data set and its
# mappings.We have also added which column should be used for color
# and fill mappings.
plot_3 <- ggplot(data = iris,
aes(x = Petal.Length,
y = Petal.Width,
color = Species,
fill = Species))
# Basic boxplot adding a `geom_boxplot()` layer
plot_3 +
geom_point()
# RColorBrewer Examples
# install.packages("RColorBrewer")
library(RColorBrewer)
# RColorBrewer Example 1
plot_3 +
geom_point(size = 2) +
scale_color_brewer(palette = "PuOr")
# RColorBrewer Example 2
plot_3 +
geom_point(size = 2) +
scale_color_brewer(palette = "Blues")
# viridisLite Example 1
# To be used with discrete data (non-continous)
plot_3 +
geom_point(size = 2) +
scale_colour_viridis_d()
# viridisLite Example 2
# To be used with discrete data (non-continous)
plot_3 +
geom_point(size = 2) +
scale_colour_viridis_d("magma")
# Creating the base plot. Here we have indicated the data set and its
# mappings.We have also added which column should be used for color
# and fill mappings.
plot_3 <- ggplot(data = iris,
aes(x = Petal.Length,
y = Petal.Width,
color = Species,
fill = Species))
# Basic boxplot adding a `geom_boxplot()` layer
plot_3 +
geom_point()
# RColorBrewer Examples
# install.packages("RColorBrewer")
library(RColorBrewer)
# RColorBrewer Example 1
plot_3 +
geom_point(size = 2) +
scale_color_brewer(palette = "PuOr")
# RColorBrewer Example 2
plot_3 +
geom_point(size = 2) +
scale_color_brewer(palette = "Blues")
# viridisLite Example 1
# To be used with discrete data (non-continous)
plot_3 +
geom_point(size = 2) +
scale_colour_viridis_d()
# viridisLite Example 2
# To be used with discrete data (non-continous)
plot_3 +
geom_point(size = 2) +
scale_colour_viridis_d("plasma")
# Creating the base plot. Here we have indicated the data set and its
# mappings.We have also added which column should be used for color
# and fill mappings.
plot_3 <- ggplot(data = iris,
aes(x = Petal.Length,
y = Petal.Width,
color = Species,
fill = Species))
# Basic boxplot adding a `geom_boxplot()` layer
plot_3 +
geom_point()
# RColorBrewer Examples
# install.packages("RColorBrewer")
library(RColorBrewer)
# RColorBrewer Example 1
plot_3 +
geom_point(size = 2) +
scale_color_brewer(palette = "PuOr")
# RColorBrewer Example 2
plot_3 +
geom_point(size = 2) +
scale_color_brewer(palette = "Blues")
# viridisLite Example 1
# To be used with discrete data (non-continous)
plot_3 +
geom_point(size = 2) +
scale_colour_viridis_d()
# viridisLite Example 2
# To be used with discrete data (non-continous)
plot_3 +
geom_point(size = 2) +
scale_colour_viridis_d(option = "plasma")
# Creating the base plot. Here we have indicated the data set and its
# mappings.We have also added which column should be used for color
# and fill mappings.
plot_3 <- ggplot(data = iris,
aes(x = Petal.Length,
y = Petal.Width,
color = Species,
fill = Species))
# Basic boxplot adding a `geom_boxplot()` layer
plot_3 +
geom_point()
# RColorBrewer Examples
# install.packages("RColorBrewer")
library(RColorBrewer)
# RColorBrewer Example 1
plot_3 +
geom_point(size = 2) +
scale_color_brewer(palette = "PuOr")
# RColorBrewer Example 2
plot_3 +
geom_point(size = 2) +
scale_color_brewer(palette = "Blues")
# viridisLite Example 1
# To be used with discrete data (non-continous)
# Uses default color option
plot_3 +
geom_point(size = 2) +
scale_colour_viridis_d()
# viridisLite Example 2
# To be used with discrete data (non-continous)
# C
plot_3 +
geom_point(size = 2) +
scale_colour_viridis_d(option = "plasma")
# Using Your Own Colors, Example 1
plot_3 +
geom_point(size = 2) +
scale_color_fill(values = c("pink", "skyblue", "yellow"))
# Creating the base plot. Here we have indicated the data set and its
# mappings.We have also added which column should be used for color
# and fill mappings.
plot_3 <- ggplot(data = iris,
aes(x = Petal.Length,
y = Petal.Width,
color = Species,
fill = Species))
# Basic boxplot adding a `geom_boxplot()` layer
plot_3 +
geom_point()
# RColorBrewer Examples
# install.packages("RColorBrewer")
library(RColorBrewer)
# RColorBrewer Example 1
plot_3 +
geom_point(size = 2) +
scale_color_brewer(palette = "PuOr")
# RColorBrewer Example 2
plot_3 +
geom_point(size = 2) +
scale_color_brewer(palette = "Blues")
# viridisLite Example 1
# To be used with discrete data (non-continous)
# Uses default color option
plot_3 +
geom_point(size = 2) +
scale_colour_viridis_d()
# viridisLite Example 2
# To be used with discrete data (non-continous)
# C
plot_3 +
geom_point(size = 2) +
scale_colour_viridis_d(option = "plasma")
# Using Your Own Colors, Example 1
plot_3 +
geom_point(size = 2) +
scale_fill_manual(values = c("pink", "skyblue", "yellow"))
# Using Your Own Colors, Example 1
plot_3 +
geom_point(size = 2) +
scale_fill_manual(values = c("pink", "purple", "yellow"))
# Using Your Own Colors, Example 1
plot_3 +
geom_point(size = 2) +
scale_fill_manual(values = c("#440154FF", "#21908CFF", "#FDE725FF"))
# Using Your Own Colors, Example 1
plot_3 +
geom_point(size = 2) +
scale_fill_manual(values = c("#440154FF", "#21908CFF", "#FDE725FF"))
# Using Your Own Colors, Example 1
plot_3 +
geom_point(size = 2) +
scale_fill_discrete(values = c("#440154FF", "#21908CFF", "#FDE725FF"))
# Using Your Own Colors, Example 1
plot_3 +
geom_point(size = 2) +
scale_fill_manual(values = c("#440154FF", "#21908CFF", "#FDE725FF"))
# Using Your Own Colors, Example 1
plot_3 +
geom_point(size = 2) +
scale_fill_manual(values = c("#440154FF", "#21908CFF", "#FDE725FF"))
# Using Your Own Colors, Example 1
plot_3 +
geom_point(size = 2) +
scale_color_manual(values = c("#440154FF", "#21908CFF", "#FDE725FF"))
plot_3 +
geom_point(size = 2) +
scale_color_manual(values = c("brown", "red", "skyblue"))
plot_3 +
geom_point(size = 2) +
scale_color_manual(values = c("brown20", "red", "skyblue"))
setwd(/Users/stacey/Data/GitHub/R-with-ggplot-data-visualization)
setwd("/Users/stacey/Data/GitHub/R-with-ggplot-data-visualization")
getwd
getwd()
download.file(url = "https://ndownloader.figshare.com/files/2292169",
destfile = "data_raw/portal_data_joined.csv")
### Downloading Data
To save our work for future reference, let's begin working in a script. To do so, click on **File > New File > R Script**. You can begin writing in this text document. To run the code you have written, hit the *RUN* button when your cursor is at the end of a segment of code that you wish to run. Alternatively, you can highlight the code and hit Command or Control + ENTER
download.file(url = "https://ndownloader.figshare.com/files/2292169",
destfile = "data_raw/portal_data_joined.csv")
getwd
getwd()
knitr::opts_chunk$set(echo = TRUE)
download.file(url = "https://ndownloader.figshare.com/files/2292169",
destfile = "data_raw/portal_data_joined.csv")
install.packages("tidyverse")
library(tidyverse)
data <- read_csv("data_raw/portal_data_joined.csv")
getwd()
setwd("~/Data/GitHub/R-with-ggplot-data-visualization/data_raw")
data <- read_csv("data_raw/portal_data_joined.csv")
knitr::opts_chunk$set(echo = TRUE)
download.file(url = "https://ndownloader.figshare.com/files/2292169",
destfile = "data_raw/portal_data_joined.csv")
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
data <- read_csv("data_raw/portal_data_joined.csv")
install.packages("rlang")
knitr::opts_chunk$set(echo = TRUE)
download.file(url = "https://ndownloader.figshare.com/files/2292169",
destfile = "data_raw/portal_data_joined.csv")
library(tidyverse)
data <- read_csv("data_raw/portal_data_joined.csv")
getwd()
setwd("/Users/stacey/Data/GitHub/R-with-ggplot-data-visualization/")
data <- read_csv("data_raw/portal_data_joined.csv")
data()
mydata <- read_csv("data_raw/portal_data_joined.csv")
update.packages(checkBuilt=TRUE, ask=FALSE)
mydata <- read_csv("data_raw/portal_data_joined.csv")
library(tidyverse)
mydata <- read_csv("data_raw/portal_data_joined.csv")
